// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id         Int      @id @default(autoincrement())
  user_id    Int
  login      String
  password   String
  country_id Int
  status     String   @default("unconnected")
  state      String   @default("waiting")
  locked     Boolean  @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  country Country @relation(fields: [country_id], references: [id], onDelete: Cascade)


  @@unique([login, country_id])

  @@map("accounts")
  Token Token[]
}


model Country {
  id        Int      @id @default(autoincrement())
  libelle   String
  code      String
  alias     String
  flag      String
  currency  String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  

  @@map("countries")
  Account Account[]
  Otp Otp[]
}

model User {
  id         Int      @id @default(autoincrement())
  civility   String
  name       String
  surname    String
  picture    String
  birthdate  DateTime


  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
  Account Account[]
}

model Otp{
  id         Int      @id @default(autoincrement())
  code       String
  type       String
  value      String
  country_id Int
  state      String   @default("waiting")

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  country    Country @relation(fields: [country_id], references: [id], onDelete: Cascade)

  @@map("otps")
}

model Token{
  id         Int      @id @default(autoincrement())
  token      String
  type       String
  account_id Int
  state      String   @default("in progress")

  created_at DateTime @default(now())
  
  updated_at DateTime @updatedAt

  account Account @relation(fields: [account_id], references: [id], onDelete: Cascade)

  @@map("tokens")
}

model Entity{
  id         Int      @id @default(autoincrement())
  libelle    String
  code       String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("entities")
}